"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const make_dir_1 = __importDefault(require("make-dir"));
const temp_directory_1 = __importDefault(require("../../../../../utils/temp-directory"));
const promisified_functions_1 = require("../../../../../utils/promisified-functions");
async function default_1(proxyHostName) {
    const tempDir = await temp_directory_1.default.createDirectory('chrome-profile');
    const profileDirName = path_1.default.join(tempDir.path, 'Default');
    await make_dir_1.default(profileDirName);
    const preferences = {
        'credentials_enable_service': false,
        'devtools': {
            'preferences': {
                'currentDockState': '"undocked"',
                'lastDockState': '"bottom"'
            }
        },
        'profile': {
            'content_settings': {
                'exceptions': {
                    'automatic_downloads': {
                        [proxyHostName]: { setting: 1 }
                    }
                }
            },
            'password_manager_enabled': false
        },
        'translate': {
            'enabled': false
        }
    };
    await promisified_functions_1.writeFile(path_1.default.join(profileDirName, 'Preferences'), JSON.stringify(preferences));
    await promisified_functions_1.writeFile(path_1.default.join(tempDir.path, 'First Run'), '');
    return tempDir;
}
exports.default = default_1;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXRlbXAtcHJvZmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9icm93c2VyL3Byb3ZpZGVyL2J1aWx0LWluL2RlZGljYXRlZC9jaHJvbWUvY3JlYXRlLXRlbXAtcHJvZmlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLGdEQUF3QjtBQUN4Qix3REFBK0I7QUFDL0IseUZBQWdFO0FBQ2hFLHNGQUF1RTtBQUd4RCxLQUFLLG9CQUFXLGFBQWE7SUFDeEMsTUFBTSxPQUFPLEdBQVUsTUFBTSx3QkFBYSxDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzdFLE1BQU0sY0FBYyxHQUFHLGNBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztJQUUxRCxNQUFNLGtCQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7SUFFOUIsTUFBTSxXQUFXLEdBQUc7UUFDaEIsNEJBQTRCLEVBQUUsS0FBSztRQUVuQyxVQUFVLEVBQUU7WUFDUixhQUFhLEVBQUU7Z0JBQ1gsa0JBQWtCLEVBQUUsWUFBWTtnQkFDaEMsZUFBZSxFQUFLLFVBQVU7YUFDakM7U0FDSjtRQUVELFNBQVMsRUFBRTtZQUNQLGtCQUFrQixFQUFFO2dCQUNoQixZQUFZLEVBQUU7b0JBQ1YscUJBQXFCLEVBQUU7d0JBQ25CLENBQUMsYUFBYSxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFO3FCQUNsQztpQkFDSjthQUNKO1lBRUQsMEJBQTBCLEVBQUUsS0FBSztTQUNwQztRQUVELFdBQVcsRUFBRTtZQUNULFNBQVMsRUFBRSxLQUFLO1NBQ25CO0tBQ0osQ0FBQztJQUVGLE1BQU0saUNBQVMsQ0FBQyxjQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDdkYsTUFBTSxpQ0FBUyxDQUFDLGNBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUUxRCxPQUFPLE9BQU8sQ0FBQztBQUNuQixDQUFDO0FBckNELDRCQXFDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IG1ha2VEaXIgZnJvbSAnbWFrZS1kaXInO1xuaW1wb3J0IFRlbXBEaXJlY3RvcnkgZnJvbSAnLi4vLi4vLi4vLi4vLi4vdXRpbHMvdGVtcC1kaXJlY3RvcnknO1xuaW1wb3J0IHsgd3JpdGVGaWxlIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdXRpbHMvcHJvbWlzaWZpZWQtZnVuY3Rpb25zJztcblxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiAocHJveHlIb3N0TmFtZSkge1xuICAgIGNvbnN0IHRlbXBEaXIgICAgICAgID0gYXdhaXQgVGVtcERpcmVjdG9yeS5jcmVhdGVEaXJlY3RvcnkoJ2Nocm9tZS1wcm9maWxlJyk7XG4gICAgY29uc3QgcHJvZmlsZURpck5hbWUgPSBwYXRoLmpvaW4odGVtcERpci5wYXRoLCAnRGVmYXVsdCcpO1xuXG4gICAgYXdhaXQgbWFrZURpcihwcm9maWxlRGlyTmFtZSk7XG5cbiAgICBjb25zdCBwcmVmZXJlbmNlcyA9IHtcbiAgICAgICAgJ2NyZWRlbnRpYWxzX2VuYWJsZV9zZXJ2aWNlJzogZmFsc2UsXG5cbiAgICAgICAgJ2RldnRvb2xzJzoge1xuICAgICAgICAgICAgJ3ByZWZlcmVuY2VzJzoge1xuICAgICAgICAgICAgICAgICdjdXJyZW50RG9ja1N0YXRlJzogJ1widW5kb2NrZWRcIicsXG4gICAgICAgICAgICAgICAgJ2xhc3REb2NrU3RhdGUnOiAgICAnXCJib3R0b21cIidcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAncHJvZmlsZSc6IHtcbiAgICAgICAgICAgICdjb250ZW50X3NldHRpbmdzJzoge1xuICAgICAgICAgICAgICAgICdleGNlcHRpb25zJzoge1xuICAgICAgICAgICAgICAgICAgICAnYXV0b21hdGljX2Rvd25sb2Fkcyc6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFtwcm94eUhvc3ROYW1lXTogeyBzZXR0aW5nOiAxIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICdwYXNzd29yZF9tYW5hZ2VyX2VuYWJsZWQnOiBmYWxzZVxuICAgICAgICB9LFxuXG4gICAgICAgICd0cmFuc2xhdGUnOiB7XG4gICAgICAgICAgICAnZW5hYmxlZCc6IGZhbHNlXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgYXdhaXQgd3JpdGVGaWxlKHBhdGguam9pbihwcm9maWxlRGlyTmFtZSwgJ1ByZWZlcmVuY2VzJyksIEpTT04uc3RyaW5naWZ5KHByZWZlcmVuY2VzKSk7XG4gICAgYXdhaXQgd3JpdGVGaWxlKHBhdGguam9pbih0ZW1wRGlyLnBhdGgsICdGaXJzdCBSdW4nKSwgJycpO1xuXG4gICAgcmV0dXJuIHRlbXBEaXI7XG59XG4iXX0=