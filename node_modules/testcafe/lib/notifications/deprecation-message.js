"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const callsite_record_1 = require("callsite-record");
const create_stack_filter_1 = __importDefault(require("../errors/create-stack-filter"));
function showDeprecationMessage(callsite, info) {
    let callsiteStr = '';
    if (callsite) {
        callsiteStr = callsite.renderSync({
            renderer: callsite_record_1.renderers.noColor,
            stackFilter: create_stack_filter_1.default(Error.stackTraceLimit)
        });
    }
    /* eslint-disable no-console */
    console.error(chalk_1.default.yellow('\n----'));
    console.error(chalk_1.default.yellow(`DEPRECATION-WARNING: ${info.what} was deprecated and will be removed in future releases.`));
    console.error(chalk_1.default.yellow(`Use ${info.useInstead} instead.`));
    console.error(chalk_1.default.yellow(`See https://devexpress.github.io/testcafe/documentation for more info.`));
    console.error(chalk_1.default.yellow(callsiteStr));
    console.error(chalk_1.default.yellow('----\n'));
    /* eslint-enable no-console */
}
exports.default = showDeprecationMessage;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwcmVjYXRpb24tbWVzc2FnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub3RpZmljYXRpb25zL2RlcHJlY2F0aW9uLW1lc3NhZ2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxrREFBMEI7QUFDMUIscURBQTRDO0FBQzVDLHdGQUE4RDtBQUU5RCxTQUF3QixzQkFBc0IsQ0FBRSxRQUFRLEVBQUUsSUFBSTtJQUMxRCxJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUM7SUFFckIsSUFBSSxRQUFRLEVBQUU7UUFDVixXQUFXLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQztZQUM5QixRQUFRLEVBQUssMkJBQVMsQ0FBQyxPQUFPO1lBQzlCLFdBQVcsRUFBRSw2QkFBaUIsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDO1NBQ3hELENBQUMsQ0FBQztLQUNOO0lBRUQsK0JBQStCO0lBQy9CLE9BQU8sQ0FBQyxLQUFLLENBQUMsZUFBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3RDLE9BQU8sQ0FBQyxLQUFLLENBQUMsZUFBSyxDQUFDLE1BQU0sQ0FBQyx3QkFBd0IsSUFBSSxDQUFDLElBQUkseURBQXlELENBQUMsQ0FBQyxDQUFDO0lBQ3hILE9BQU8sQ0FBQyxLQUFLLENBQUMsZUFBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksQ0FBQyxVQUFVLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDL0QsT0FBTyxDQUFDLEtBQUssQ0FBQyxlQUFLLENBQUMsTUFBTSxDQUFDLHdFQUF3RSxDQUFDLENBQUMsQ0FBQztJQUN0RyxPQUFPLENBQUMsS0FBSyxDQUFDLGVBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztJQUN6QyxPQUFPLENBQUMsS0FBSyxDQUFDLGVBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUN0Qyw4QkFBOEI7QUFDbEMsQ0FBQztBQWxCRCx5Q0FrQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnO1xuaW1wb3J0IHsgcmVuZGVyZXJzIH0gZnJvbSAnY2FsbHNpdGUtcmVjb3JkJztcbmltcG9ydCBjcmVhdGVTdGFja0ZpbHRlciBmcm9tICcuLi9lcnJvcnMvY3JlYXRlLXN0YWNrLWZpbHRlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNob3dEZXByZWNhdGlvbk1lc3NhZ2UgKGNhbGxzaXRlLCBpbmZvKSB7XG4gICAgbGV0IGNhbGxzaXRlU3RyID0gJyc7XG5cbiAgICBpZiAoY2FsbHNpdGUpIHtcbiAgICAgICAgY2FsbHNpdGVTdHIgPSBjYWxsc2l0ZS5yZW5kZXJTeW5jKHtcbiAgICAgICAgICAgIHJlbmRlcmVyOiAgICByZW5kZXJlcnMubm9Db2xvcixcbiAgICAgICAgICAgIHN0YWNrRmlsdGVyOiBjcmVhdGVTdGFja0ZpbHRlcihFcnJvci5zdGFja1RyYWNlTGltaXQpXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgICBjb25zb2xlLmVycm9yKGNoYWxrLnllbGxvdygnXFxuLS0tLScpKTtcbiAgICBjb25zb2xlLmVycm9yKGNoYWxrLnllbGxvdyhgREVQUkVDQVRJT04tV0FSTklORzogJHtpbmZvLndoYXR9IHdhcyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gZnV0dXJlIHJlbGVhc2VzLmApKTtcbiAgICBjb25zb2xlLmVycm9yKGNoYWxrLnllbGxvdyhgVXNlICR7aW5mby51c2VJbnN0ZWFkfSBpbnN0ZWFkLmApKTtcbiAgICBjb25zb2xlLmVycm9yKGNoYWxrLnllbGxvdyhgU2VlIGh0dHBzOi8vZGV2ZXhwcmVzcy5naXRodWIuaW8vdGVzdGNhZmUvZG9jdW1lbnRhdGlvbiBmb3IgbW9yZSBpbmZvLmApKTtcbiAgICBjb25zb2xlLmVycm9yKGNoYWxrLnllbGxvdyhjYWxsc2l0ZVN0cikpO1xuICAgIGNvbnNvbGUuZXJyb3IoY2hhbGsueWVsbG93KCctLS0tXFxuJykpO1xuICAgIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xufVxuIl19